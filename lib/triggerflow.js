// Generated by CoffeeScript 1.3.3
(function() {
  var TriggerFlow,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  TriggerFlow = (function() {

    function TriggerFlow() {
      this.update = __bind(this.update, this);
      this.callback = function() {};
      this.object = {};
    }

    TriggerFlow.prototype.update = function(partialObject) {
      var allTrue, args, key, val, _ref;
      for (key in partialObject) {
        val = partialObject[key];
        if (partialObject.hasOwnProperty(key)) {
          if (typeof val === 'number') {
            if (val < 0) {
              this.object[key] = this.object[key] + val;
            } else {
              this.object[key] = val;
            }
          } else {
            this.object[key] = val;
          }
        }
      }
      allTrue = true;
      _ref = this.object;
      for (key in _ref) {
        val = _ref[key];
        if (this.object.hasOwnProperty(key)) {
          if (typeof val === 'boolean') {
            allTrue &= val;
          }
          if (typeof val === 'number') {
            allTrue &= val === 0;
          }
          if (!allTrue) {
            return;
          }
        }
      }
      args = [];
      Array.prototype.push.apply(args, arguments);
      args.shift();
      if (this.callback != null) {
        return this.callback.apply(null, args);
      }
    };

    TriggerFlow.create = function(object, callback) {
      var tf;
      tf = new TriggerFlow();
      tf.callback = callback;
      tf.object = object;
      return tf;
    };

    return TriggerFlow;

  })();

  module.exports.TriggerFlow = TriggerFlow;

}).call(this);
